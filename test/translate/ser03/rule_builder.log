[2020-12-08 16:04:30,599][][DEBUG][translate.py][<module>][--------- TRANSLATION ---------]
[2020-12-08 16:04:30,599][][DEBUG][translate.py][<module>][--------- TRANSLATION ---------]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][<module>][User Input Validation]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][<module>][User Input Validation]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing from file ser03.mi]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing from file ser03.mi]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|start|none|this|start]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|start|none|this|start]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void <init>(java.io.OutputStream)|none|this|a]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void <init>(java.io.OutputStream)|none|this|a]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==sensitive|this|b]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==sensitive|this|b]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==not_sensitive|this|c]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==not_sensitive|this|c]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|end|none|this|end]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|end|none|this|end]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|start|a|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|start|a|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|b|SER03]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|b|SER03]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|c|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|c|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|b|end|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|b|end|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|c|end|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|c|end|none]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content TAG|<Point: void <init>(double,double)>|this()|sensitive]
[2020-12-08 16:04:30,608][][DEBUG][translate.py][create_usr_graph][Parsing Content TAG|<Point: void <init>(double,double)>|this()|sensitive]
[2020-12-08 16:04:30,608][][DEBUG][TagAssert.py][add_entry][Tag detected]
[2020-12-08 16:04:30,608][][DEBUG][TagAssert.py][add_entry][Tag detected]
[2020-12-08 16:04:30,608][][DEBUG][TagAssert.py][__init__][Creating tag]
[2020-12-08 16:04:30,608][][DEBUG][TagAssert.py][__init__][Creating tag]
[2020-12-08 16:04:30,608][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:04:30,608][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][add_entry][{'Point': {'void <init>(double,double)': [(Tag, <init>, this(), sensitive)]}}]
[2020-12-08 16:04:30,609][][DEBUG][TagAssert.py][add_entry][{'Point': {'void <init>(double,double)': [(Tag, <init>, this(), sensitive)]}}]
[2020-12-08 16:04:30,609][][DEBUG][translate.py][create_fsm][Converting the user model to FSM model]
[2020-12-08 16:04:30,609][][DEBUG][translate.py][create_fsm][Converting the user model to FSM model]
[2020-12-08 16:04:30,609][][DEBUG][fsm.py][convert][Converting User input into FSM logic]
[2020-12-08 16:04:30,609][][DEBUG][fsm.py][convert][Converting User input into FSM logic]
[2020-12-08 16:04:30,609][][DEBUG][fsm.py][add_edge][Adding edge start->s1 to start]
[2020-12-08 16:04:30,609][][DEBUG][fsm.py][add_edge][Adding edge start->s1 to start]
[2020-12-08 16:04:30,610][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:04:30,610][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:04:30,610][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:04:30,610][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:04:30,610][][INFO][TagAssert.py][create_file][Create path for Point]
[2020-12-08 16:04:30,610][][INFO][TagAssert.py][create_file][Create path for Point]
[2020-12-08 16:04:30,612][][DEBUG][TagAssert.py][create_file][file is Point.h]
[2020-12-08 16:04:30,612][][DEBUG][TagAssert.py][create_file][file is Point.h]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_header][write header file of <_io.TextIOWrapper name='Point.h' mode='w' encoding='UTF-8'>]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_header][write header file of <_io.TextIOWrapper name='Point.h' mode='w' encoding='UTF-8'>]
[2020-12-08 16:04:30,613][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:04:30,613][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_signature][init detect]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_signature][init detect]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_signature][writing]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_signature][writing]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_body][writing (Tag, <init>, this(), sensitive) into Point.h]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_body][writing (Tag, <init>, this(), sensitive) into Point.h]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_body][raw string tag(this(), "sensitive")]
[2020-12-08 16:04:30,613][][DEBUG][TagAssert.py][write_func_body][raw string tag(this(), "sensitive")]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][parse][---------------]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][parse][---------------]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][parse][Parsing condition: tag(this(), "sensitive")]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][parse][Parsing condition: tag(this(), "sensitive")]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][Node intialisation with tag(this(), "sensitive")]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][Node intialisation with tag(this(), "sensitive")]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][Parent: tag, children: this(), "sensitive"]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][Parent: tag, children: this(), "sensitive"]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][add_children][Adding ['this()', ' "sensitive"'] as children to tag]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][add_children][Adding ['this()', ' "sensitive"'] as children to tag]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][api_add_tag][children of RBC_SET_TAG API]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][api_add_tag][children of RBC_SET_TAG API]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][Node intialisation with this()]
[2020-12-08 16:04:30,613][][DEBUG][ConditionParse.py][__init__][Node intialisation with this()]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][Parent: this, children: ]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][Parent: this, children: ]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][add_children][Adding [''] as children to this]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][add_children][Adding [''] as children to this]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][api_add_this][children of THIS_POINTER api]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][api_add_this][children of THIS_POINTER api]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][Node intialisation with ]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][Node intialisation with ]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][Node intialisation with  "sensitive"]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][__init__][Node intialisation with  "sensitive"]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][write_func_body][RBC_SET_TAG(THIS_POINTER, "sensitive")]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][write_func_body][RBC_SET_TAG(THIS_POINTER, "sensitive")]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:04:30,614][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][write_ret][write_ret params: void]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][write_ret][write_ret params: void]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][write_ret][to write: ]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][write_ret][to write: ]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][generate][Dependencies: set()]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][generate][Dependencies: set()]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][create_dep_files][creating dep files with set()]
[2020-12-08 16:04:30,614][][DEBUG][TagAssert.py][create_dep_files][creating dep files with set()]
[2020-12-08 16:04:30,614][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void <init>(java.io.OutputStream)]
[2020-12-08 16:04:30,614][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void <init>(java.io.OutputStream)]
[2020-12-08 16:04:30,741][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:04:30,741][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:04:30,741][][DEBUG][translate.py][write_transitions][Condition: none]
[2020-12-08 16:04:30,741][][DEBUG][translate.py][write_transitions][Condition: none]
[2020-12-08 16:04:30,741][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:04:30,741][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:04:30,829][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:04:30,829][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:04:30,829][][DEBUG][translate.py][write_transitions][Condition: arg1==sensitive]
[2020-12-08 16:04:30,829][][DEBUG][translate.py][write_transitions][Condition: arg1==sensitive]
[2020-12-08 16:04:30,829][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:04:30,829][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:04:30,887][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:04:30,887][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:04:30,887][][DEBUG][translate.py][write_transitions][Condition: arg1==not_sensitive]
[2020-12-08 16:04:30,887][][DEBUG][translate.py][write_transitions][Condition: arg1==not_sensitive]
[2020-12-08 16:04:30,887][][DEBUG][translate.py][write_transitions][Fsm_default_action transitions]
[2020-12-08 16:04:30,887][][DEBUG][translate.py][write_transitions][Fsm_default_action transitions]
[2020-12-08 16:04:30,887][][INFO][translate.py][<module>][Writing into SER03.java]
[2020-12-08 16:04:30,887][][INFO][translate.py][<module>][Writing into SER03.java]
[2020-12-08 16:12:50,065][][DEBUG][translate.py][<module>][--------- TRANSLATION ---------]
[2020-12-08 16:12:50,065][][DEBUG][translate.py][<module>][--------- TRANSLATION ---------]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][<module>][User Input Validation]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][<module>][User Input Validation]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing from file ser03.mi]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing from file ser03.mi]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|start|none|this|start]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|start|none|this|start]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void <init>(java.io.OutputStream)|none|this|a]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void <init>(java.io.OutputStream)|none|this|a]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==sensitive|this|b]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==sensitive|this|b]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==not_sensitive|this|c]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==not_sensitive|this|c]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|end|none|this|end]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|end|none|this|end]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|start|a|none]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|start|a|none]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|b|SER03]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|b|SER03]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|c|none]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|c|none]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|b|end|none]
[2020-12-08 16:12:50,071][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|b|end|none]
[2020-12-08 16:12:50,072][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|c|end|none]
[2020-12-08 16:12:50,072][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|c|end|none]
[2020-12-08 16:12:50,072][][DEBUG][translate.py][create_usr_graph][Parsing Content TAG|<Point: void <init>(double,double)>|this()|sensitive]
[2020-12-08 16:12:50,072][][DEBUG][translate.py][create_usr_graph][Parsing Content TAG|<Point: void <init>(double,double)>|this()|sensitive]
[2020-12-08 16:12:50,072][][DEBUG][TagAssert.py][add_entry][Tag detected]
[2020-12-08 16:12:50,072][][DEBUG][TagAssert.py][add_entry][Tag detected]
[2020-12-08 16:12:50,072][][DEBUG][TagAssert.py][__init__][Creating tag]
[2020-12-08 16:12:50,072][][DEBUG][TagAssert.py][__init__][Creating tag]
[2020-12-08 16:12:50,072][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:12:50,072][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:12:50,076][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][add_entry][{'Point': {'void <init>(double,double)': [(Tag, <init>, this(), sensitive)]}}]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][add_entry][{'Point': {'void <init>(double,double)': [(Tag, <init>, this(), sensitive)]}}]
[2020-12-08 16:12:50,077][][DEBUG][translate.py][create_fsm][Converting the user model to FSM model]
[2020-12-08 16:12:50,077][][DEBUG][translate.py][create_fsm][Converting the user model to FSM model]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][convert][Converting User input into FSM logic]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][convert][Converting User input into FSM logic]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][add_edge][Adding edge start->s1 to start]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][add_edge][Adding edge start->s1 to start]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:12:50,077][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:12:50,077][][INFO][TagAssert.py][create_file][Create path for Point]
[2020-12-08 16:12:50,077][][INFO][TagAssert.py][create_file][Create path for Point]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][create_file][file is Point.h]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][create_file][file is Point.h]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][write_header][write header file of <_io.TextIOWrapper name='Point.h' mode='w' encoding='UTF-8'>]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][write_header][write header file of <_io.TextIOWrapper name='Point.h' mode='w' encoding='UTF-8'>]
[2020-12-08 16:12:50,077][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:12:50,077][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:12:50,077][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_signature][init detect]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_signature][init detect]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_signature][writing]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_signature][writing]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_body][writing (Tag, <init>, this(), sensitive) into Point.h]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_body][writing (Tag, <init>, this(), sensitive) into Point.h]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_body][raw string tag(this(), "sensitive")]
[2020-12-08 16:12:50,078][][DEBUG][TagAssert.py][write_func_body][raw string tag(this(), "sensitive")]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][parse][---------------]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][parse][---------------]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][parse][Parsing condition: tag(this(), "sensitive")]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][parse][Parsing condition: tag(this(), "sensitive")]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with tag(this(), "sensitive")]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with tag(this(), "sensitive")]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Parent: tag, children: this(), "sensitive"]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Parent: tag, children: this(), "sensitive"]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][add_children][Adding ['this()', ' "sensitive"'] as children to tag]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][add_children][Adding ['this()', ' "sensitive"'] as children to tag]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][api_add_tag][children of RBC_SET_TAG API]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][api_add_tag][children of RBC_SET_TAG API]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with this()]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with this()]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Parent: this, children: ]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Parent: this, children: ]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][add_children][Adding [''] as children to this]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][add_children][Adding [''] as children to this]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][api_add_this][children of THIS_POINTER api]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][api_add_this][children of THIS_POINTER api]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with ]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with ]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with  "sensitive"]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][__init__][Node intialisation with  "sensitive"]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:12:50,078][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][write_func_body][RBC_SET_TAG(THIS_POINTER, "sensitive")]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][write_func_body][RBC_SET_TAG(THIS_POINTER, "sensitive")]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:12:50,079][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][write_ret][write_ret params: void]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][write_ret][write_ret params: void]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][write_ret][to write: ]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][write_ret][to write: ]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][generate][Dependencies: set()]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][generate][Dependencies: set()]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][create_dep_files][creating dep files with set()]
[2020-12-08 16:12:50,079][][DEBUG][TagAssert.py][create_dep_files][creating dep files with set()]
[2020-12-08 16:12:50,079][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void <init>(java.io.OutputStream)]
[2020-12-08 16:12:50,079][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void <init>(java.io.OutputStream)]
[2020-12-08 16:12:50,221][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:12:50,221][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:12:50,221][][DEBUG][translate.py][write_transitions][Condition: none]
[2020-12-08 16:12:50,221][][DEBUG][translate.py][write_transitions][Condition: none]
[2020-12-08 16:12:50,221][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:12:50,221][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:12:50,305][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:12:50,305][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:12:50,305][][DEBUG][translate.py][write_transitions][Condition: arg1==sensitive]
[2020-12-08 16:12:50,305][][DEBUG][translate.py][write_transitions][Condition: arg1==sensitive]
[2020-12-08 16:12:50,305][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:12:50,305][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:12:50,366][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:12:50,366][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:12:50,366][][DEBUG][translate.py][write_transitions][Condition: arg1==not_sensitive]
[2020-12-08 16:12:50,366][][DEBUG][translate.py][write_transitions][Condition: arg1==not_sensitive]
[2020-12-08 16:12:50,366][][DEBUG][translate.py][write_transitions][Fsm_default_action transitions]
[2020-12-08 16:12:50,366][][DEBUG][translate.py][write_transitions][Fsm_default_action transitions]
[2020-12-08 16:12:50,366][][INFO][translate.py][<module>][Writing into SER03.java]
[2020-12-08 16:12:50,366][][INFO][translate.py][<module>][Writing into SER03.java]
[2020-12-08 16:34:57,094][][DEBUG][translate.py][<module>][--------- TRANSLATION ---------]
[2020-12-08 16:34:57,094][][DEBUG][translate.py][<module>][--------- TRANSLATION ---------]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][<module>][User Input Validation]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][<module>][User Input Validation]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing from file ser03.mi]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing from file ser03.mi]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|start|none|this|start]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|start|none|this|start]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void <init>(java.io.OutputStream)|none|this|a]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void <init>(java.io.OutputStream)|none|this|a]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==sensitive|this|b]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==sensitive|this|b]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==not_sensitive|this|c]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|java.io.ObjectOutputStream: void writeObject(java.lang.Object)|arg1==not_sensitive|this|c]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|end|none|this|end]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content NODE|end|none|this|end]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|start|a|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|start|a|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|b|SER03]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|b|SER03]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|c|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|a|c|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|b|end|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|b|end|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|c|end|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content EDGE|c|end|none]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content TAG|<Point: void <init>(double,double)>|this()|sensitive]
[2020-12-08 16:34:57,099][][DEBUG][translate.py][create_usr_graph][Parsing Content TAG|<Point: void <init>(double,double)>|this()|sensitive]
[2020-12-08 16:34:57,099][][DEBUG][TagAssert.py][add_entry][Tag detected]
[2020-12-08 16:34:57,099][][DEBUG][TagAssert.py][add_entry][Tag detected]
[2020-12-08 16:34:57,099][][DEBUG][TagAssert.py][__init__][Creating tag]
[2020-12-08 16:34:57,099][][DEBUG][TagAssert.py][__init__][Creating tag]
[2020-12-08 16:34:57,099][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:34:57,099][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][add_entry][{'Point': {'void <init>(double,double)': [(Tag, <init>, this(), sensitive)]}}]
[2020-12-08 16:34:57,100][][DEBUG][TagAssert.py][add_entry][{'Point': {'void <init>(double,double)': [(Tag, <init>, this(), sensitive)]}}]
[2020-12-08 16:34:57,100][][DEBUG][translate.py][create_fsm][Converting the user model to FSM model]
[2020-12-08 16:34:57,100][][DEBUG][translate.py][create_fsm][Converting the user model to FSM model]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][convert][Converting User input into FSM logic]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][convert][Converting User input into FSM logic]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][add_edge][Adding edge start->s1 to start]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][add_edge][Adding edge start->s1 to start]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:34:57,100][][DEBUG][fsm.py][add_edge][Adding edge s1->end to s1]
[2020-12-08 16:34:57,100][][INFO][TagAssert.py][create_file][Create path for Point]
[2020-12-08 16:34:57,100][][INFO][TagAssert.py][create_file][Create path for Point]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][create_file][file is Point.h]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][create_file][file is Point.h]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][write_header][write header file of <_io.TextIOWrapper name='Point.h' mode='w' encoding='UTF-8'>]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][write_header][write header file of <_io.TextIOWrapper name='Point.h' mode='w' encoding='UTF-8'>]
[2020-12-08 16:34:57,101][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:34:57,101][][INFO][TagAssert.py][__init__][Parsing a function]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][sig = <Point: void <init>(double,double)>]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][class name = Point]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][method_sig = void <init>(double,double)]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:34:57,101][][DEBUG][TagAssert.py][__init__][return type = void]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][__init__][method name = <init>]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][__init__][arguments = ['double', 'double']]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][__init__][is interface = False]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_signature][init detect]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_signature][init detect]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_signature][writing]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_signature][writing]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_body][writing (Tag, <init>, this(), sensitive) into Point.h]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_body][writing (Tag, <init>, this(), sensitive) into Point.h]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_body][raw string tag(this(), "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_body][raw string tag(this(), "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][parse][---------------]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][parse][---------------]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][parse][Parsing condition: tag(this(), "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][parse][Parsing condition: tag(this(), "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with tag(this(), "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with tag(this(), "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Parent: tag, children: this(), "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Parent: tag, children: this(), "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][add_children][Adding ['this()', ' "sensitive"'] as children to tag]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][add_children][Adding ['this()', ' "sensitive"'] as children to tag]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][api_add_tag][children of RBC_SET_TAG API]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][api_add_tag][children of RBC_SET_TAG API]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with this()]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with this()]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][API detected]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Parent: this, children: ]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Parent: this, children: ]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][add_children][Adding [''] as children to this]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][add_children][Adding [''] as children to this]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][api_add_this][children of THIS_POINTER api]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][api_add_this][children of THIS_POINTER api]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with ]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with ]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with  "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][__init__][Node intialisation with  "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_body][RBC_SET_TAG(THIS_POINTER, "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][TagAssert.py][write_func_body][RBC_SET_TAG(THIS_POINTER, "sensitive")]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content tag]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content this]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][this contains empty children]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][Translating content  "sensitive"]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:34:57,102][][DEBUG][ConditionParse.py][translate][ "sensitive" contains no children]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][write_ret][write_ret params: void]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][write_ret][write_ret params: void]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][write_ret][to write: ]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][write_ret][to write: ]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][generate][Dependencies: set()]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][generate][Dependencies: set()]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][create_dep_files][creating dep files with set()]
[2020-12-08 16:34:57,103][][DEBUG][TagAssert.py][create_dep_files][creating dep files with set()]
[2020-12-08 16:34:57,103][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void <init>(java.io.OutputStream)]
[2020-12-08 16:34:57,103][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void <init>(java.io.OutputStream)]
[2020-12-08 16:34:57,227][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:34:57,227][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:34:57,227][][DEBUG][translate.py][write_transitions][Condition: none]
[2020-12-08 16:34:57,227][][DEBUG][translate.py][write_transitions][Condition: none]
[2020-12-08 16:34:57,228][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:34:57,228][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:34:57,321][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:34:57,321][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:34:57,322][][DEBUG][translate.py][write_transitions][Condition: arg1==sensitive]
[2020-12-08 16:34:57,322][][DEBUG][translate.py][write_transitions][Condition: arg1==sensitive]
[2020-12-08 16:34:57,322][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:34:57,322][][DEBUG][translate.py][write_transitions][finding mangle of function java.io.ObjectOutputStream: void writeObject(java.lang.Object)]
[2020-12-08 16:34:57,400][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:34:57,400][][DEBUG][translate.py][write_transitions][KEY: this]
[2020-12-08 16:34:57,405][][DEBUG][translate.py][write_transitions][Condition: arg1==not_sensitive]
[2020-12-08 16:34:57,405][][DEBUG][translate.py][write_transitions][Condition: arg1==not_sensitive]
[2020-12-08 16:34:57,405][][DEBUG][translate.py][write_transitions][Fsm_default_action transitions]
[2020-12-08 16:34:57,405][][DEBUG][translate.py][write_transitions][Fsm_default_action transitions]
[2020-12-08 16:34:57,405][][INFO][translate.py][<module>][Writing into SER03.java]
[2020-12-08 16:34:57,405][][INFO][translate.py][<module>][Writing into SER03.java]
